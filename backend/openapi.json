{
	"openapi": "3.0.0",
	"info": {
		"version": "",
		"title": "Rest Endpoints",
		"description": "This OpenAPI specification is automatically generated by Hasura."
	},
	"paths": {
		"/api/rest/tasks": {
			"get": {
				"summary": "FetchTasks",
				"description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nquery FetchTasks {\n  tasks {\n    id\n    name\n    description\n    created_at\n    updated_at\n  }\n}\n```",
				"parameters": [
					{
						"schema": {
							"type": "string"
						},
						"in": "header",
						"name": "x-hasura-admin-secret",
						"description": "Your x-hasura-admin-secret will be used for authentication of the API request."
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"tasks": {
											"items": {
												"type": "object",
												"properties": {
													"name": {
														"title": "String",
														"type": "string"
													},
													"updated_at": {
														"title": "timestamptz"
													},
													"created_at": {
														"title": "timestamptz"
													},
													"id": {
														"title": "Int",
														"type": "integer"
													},
													"description": {
														"title": "String",
														"type": "string"
													}
												}
											},
											"type": "array",
											"nullable": false
										}
									}
								}
							}
						},
						"description": "Responses for GET /api/rest/tasks"
					}
				}
			},
			"post": {
				"summary": "AddTask",
				"description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nmutation AddTask($name: String!, $description: String!) {\n  addTask(object: {name: $name, description: $description}) {\n    id\n    name\n    description\n    created_at\n    updated_at\n  }\n}\n```",
				"parameters": [
					{
						"schema": {
							"type": "string"
						},
						"in": "header",
						"name": "x-hasura-admin-secret",
						"description": "Your x-hasura-admin-secret will be used for authentication of the API request."
					},
					{
						"schema": {
							"type": "string"
						},
						"in": "query",
						"name": "name",
						"description": "_\"name\" is required (enter it either in parameters or request body)_"
					},
					{
						"schema": {
							"type": "string"
						},
						"in": "query",
						"name": "description",
						"description": "_\"description\" is required (enter it either in parameters or request body)_"
					}
				],
				"requestBody": {
					"required": false,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"name": {
										"type": "string",
										"nullable": false
									},
									"description": {
										"type": "string",
										"nullable": false
									}
								}
							}
						}
					},
					"description": "Query parameters can also be provided in the request body as a JSON object"
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"addTask": {
											"type": "object",
											"properties": {
												"name": {
													"title": "String",
													"type": "string"
												},
												"updated_at": {
													"title": "timestamptz"
												},
												"created_at": {
													"title": "timestamptz"
												},
												"id": {
													"title": "Int",
													"type": "integer"
												},
												"description": {
													"title": "String",
													"type": "string"
												}
											}
										}
									}
								}
							}
						},
						"description": "Responses for POST /api/rest/tasks"
					}
				}
			}
		},
		"/api/rest/tasks/{taskId}": {
			"get": {
				"summary": "FetchTask",
				"description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nquery FetchTask($taskId: Int!) {\n  task(id: $taskId) {\n    id\n    name\n    description\n    created_at\n    updated_at\n  }\n}\n```",
				"parameters": [
					{
						"schema": {
							"type": "string"
						},
						"in": "header",
						"name": "x-hasura-admin-secret",
						"description": "Your x-hasura-admin-secret will be used for authentication of the API request."
					},
					{
						"schema": {
							"type": "integer"
						},
						"in": "path",
						"name": "taskId",
						"description": "_\"taskId\" is required (enter it either in parameters or request body)_"
					}
				],
				"requestBody": {
					"required": false,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"taskId": {
										"type": "integer",
										"nullable": false
									}
								}
							}
						}
					},
					"description": "Query parameters can also be provided in the request body as a JSON object"
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"task": {
											"type": "object",
											"properties": {
												"name": {
													"title": "String",
													"type": "string"
												},
												"updated_at": {
													"title": "timestamptz"
												},
												"created_at": {
													"title": "timestamptz"
												},
												"id": {
													"title": "Int",
													"type": "integer"
												},
												"description": {
													"title": "String",
													"type": "string"
												}
											}
										}
									}
								}
							}
						},
						"description": "Responses for GET /api/rest/tasks/{taskId}"
					}
				}
			},
			"put": {
				"summary": "UpdateTask",
				"description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nmutation UpdateTask($taskId: Int!, $name: String!, $description: String!) {\n  updateTask(pk_columns: {id: $taskId}, _set: {name: $name, description: $description}) {\n    id\n    name\n    description\n    created_at\n    updated_at\n  }\n}\n```",
				"parameters": [
					{
						"schema": {
							"type": "string"
						},
						"in": "header",
						"name": "x-hasura-admin-secret",
						"description": "Your x-hasura-admin-secret will be used for authentication of the API request."
					},
					{
						"schema": {
							"type": "integer"
						},
						"in": "path",
						"name": "taskId",
						"description": "_\"taskId\" is required (enter it either in parameters or request body)_"
					},
					{
						"schema": {
							"type": "string"
						},
						"in": "query",
						"name": "name",
						"description": "_\"name\" is required (enter it either in parameters or request body)_"
					},
					{
						"schema": {
							"type": "string"
						},
						"in": "query",
						"name": "description",
						"description": "_\"description\" is required (enter it either in parameters or request body)_"
					}
				],
				"requestBody": {
					"required": false,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"taskId": {
										"type": "integer",
										"nullable": false
									},
									"name": {
										"type": "string",
										"nullable": false
									},
									"description": {
										"type": "string",
										"nullable": false
									}
								}
							}
						}
					},
					"description": "Query parameters can also be provided in the request body as a JSON object"
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"updateTask": {
											"type": "object",
											"properties": {
												"name": {
													"title": "String",
													"type": "string"
												},
												"updated_at": {
													"title": "timestamptz"
												},
												"created_at": {
													"title": "timestamptz"
												},
												"id": {
													"title": "Int",
													"type": "integer"
												},
												"description": {
													"title": "String",
													"type": "string"
												}
											}
										}
									}
								}
							}
						},
						"description": "Responses for PUT /api/rest/tasks/{taskId}"
					}
				}
			},
			"delete": {
				"summary": "DeleteTask",
				"description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nmutation DeleteTask($taskId: Int!) {\n  deleteTask(id: $taskId) {\n    id\n  }\n}\n```",
				"parameters": [
					{
						"schema": {
							"type": "string"
						},
						"in": "header",
						"name": "x-hasura-admin-secret",
						"description": "Your x-hasura-admin-secret will be used for authentication of the API request."
					},
					{
						"schema": {
							"type": "integer"
						},
						"in": "path",
						"name": "taskId",
						"description": "_\"taskId\" is required (enter it either in parameters or request body)_"
					}
				],
				"requestBody": {
					"required": false,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"taskId": {
										"type": "integer",
										"nullable": false
									}
								}
							}
						}
					},
					"description": "Query parameters can also be provided in the request body as a JSON object"
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"deleteTask": {
											"type": "object",
											"properties": {
												"id": {
													"title": "Int",
													"type": "integer"
												}
											}
										}
									}
								}
							}
						},
						"description": "Responses for DELETE /api/rest/tasks/{taskId}"
					}
				}
			}
		}
	},
	"components": {}
}
